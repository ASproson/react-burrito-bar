{"version":3,"sources":["components/Header.js","components/Intro.js","utils/fillings.js","components/Body.js","App.js","index.js"],"names":["Header","Intro","fillings","name","price","Body","getFormattedPrice","toFixed","useState","Array","length","fill","checkedState","setCheckedState","total","setTotal","className","map","index","type","id","value","checked","onChange","checkboxID","updatedCheckedState","filling","totalPrice","reduce","sum","currentState","handleOnChange","htmlFor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNASeA,MATf,WACI,OACI,gCACA,2BACA,qECIOC,MARf,WACI,OACQ,yG,OCFCC,EAAW,CACpB,CAACC,KAAM,oBAAqBC,MAAO,GACnC,CAACD,KAAM,uBAAqBC,MAAO,KACnC,CAACD,KAAM,oBAAqBC,MAAO,GACnC,CAACD,KAAM,4BAAqBC,MAAO,GACnC,CAACD,KAAM,uBAAqBC,MAAO,GACnC,CAACD,KAAM,0BAAqBC,MAAO,KACnC,CAACD,KAAM,0BAAqBC,MAAO,KACnC,CAACD,KAAM,0BAAqBC,MAAO,KACnC,CAACD,KAAM,0BAAqBC,MAAO,MCiDxBC,MAvDf,WACI,IAAMC,EAAoB,SAAAF,GAAK,oBAAQA,EAAMG,QAAQ,KACrD,EAAwCC,mBAAS,IAAIC,MAAMP,EAASQ,QAAQC,MAAK,IAAjF,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,EAA0BL,mBAAS,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAkBA,OACI,qBAAIC,UAAU,gBAAd,UACCd,EAASe,KAAI,WAAkBC,GAAW,IAA1Bf,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MACrB,OACE,6BACE,sBAAKY,UAAU,oBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACEG,KAAK,WACLC,GAAE,mBAAcF,GAChBf,KAAMA,EACNkB,MAAOlB,EACPmB,QAASV,EAAaM,GACtBK,SAAU,kBA7BH,SAACC,GACtB,IAAMC,EAAsBb,EAAaK,KAAI,SAACS,EAASR,GAAV,OAAoBA,IAAUM,GAAcE,EAAUA,KACnGb,EAAgBY,GAEhB,IAAME,EAAaF,EAAoBG,QAAO,SAACC,EAAKC,EAAcZ,GAC9D,OAAqB,IAAjBY,EACKD,EAAM3B,EAASgB,GAAOd,MAEtByB,IAGX,GAGFd,EAASY,GAeqBI,CAAeb,MAEjC,uBAAOc,QAAO,mBAAcd,GAA5B,SAAsCf,OAExC,qBAAKa,UAAU,gBAAf,SAAgCV,EAAkBF,SAb7Cc,MAkBb,+BACA,qBAAKF,UAAU,gCACb,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,gBAAf,oBACA,qBAAKA,UAAU,gBAAf,SAAgCV,EAAkBQ,eCpC/CmB,MAVf,WACE,OACE,sBAAKjB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLNkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.84a580fc.chunk.js","sourcesContent":["function Header() {\r\n    return (\r\n        <div>\r\n        <header></header>\r\n        <h1>Bill's Burrito Bar 🌯</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","function Intro() {\r\n    return (\r\n            <p>\r\n                Welcome to the Bill's Burrito bar, please select your burrito fillings:\r\n            </p>\r\n    );\r\n}\r\n\r\nexport default Intro;","export const fillings = [\r\n    {name: '🍖 Beef',           price: 3.0},\r\n    {name: '🍗 Chicken',        price: 2.5},\r\n    {name: '🐟 Fish',           price: 2.0},\r\n    {name: '🌱 Kidney beans',   price: 1.0},\r\n    {name: '🥑 Avocado',        price: 2.0},\r\n    {name: '🍎 Red pepper',     price: 1.4},\r\n    {name: '🥔 Brown rice',     price: 1.1},\r\n    {name: '🍙 White rice',     price: 1.2},\r\n    {name: '🍘 Pilau rice',     price: 1.4},\r\n];","import { useState } from 'react';\r\nimport { fillings } from '../utils/fillings';\r\n\r\nfunction Body() {\r\n    const getFormattedPrice = price => `£${price.toFixed(2)}`;\r\n    const [checkedState, setCheckedState] = useState(new Array(fillings.length).fill(false));\r\n\r\n    const [total, setTotal] = useState(0);\r\n  \r\n    const handleOnChange = (checkboxID) => {\r\n      const updatedCheckedState = checkedState.map((filling, index) => index === checkboxID ? !filling : filling);\r\n      setCheckedState(updatedCheckedState);\r\n  \r\n      const totalPrice = updatedCheckedState.reduce((sum, currentState, index) => {\r\n          if (currentState === true) {\r\n            return sum + fillings[index].price;\r\n          } else {\r\n            return sum;\r\n          }\r\n        },\r\n        0\r\n      );\r\n  \r\n      setTotal(totalPrice);\r\n    };\r\n    return (\r\n        <ul className='fillings-list'>\r\n        {fillings.map(({ name, price }, index) => {\r\n          return (\r\n            <li key={index}>\r\n              <div className='filling-list-item'>\r\n                <div className='filling-section'>\r\n                  <input \r\n                    type='checkbox'\r\n                    id={`checkbox-${index}`}\r\n                    name={name}\r\n                    value={name}\r\n                    checked={checkedState[index]}\r\n                    onChange={() => handleOnChange(index)}\r\n                  />\r\n                  <label htmlFor={`checkbox-${index}`}>{name}</label>\r\n                </div>\r\n                <div className='price-section'>{getFormattedPrice(price)}</div>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n        <li>\r\n        <div className='separate-total-from-filling'></div>\r\n          <div className='filling-list-item'>\r\n            <div className='total-section'>Total:</div>\r\n            <div className='total-section'>{getFormattedPrice(total)}</div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    )\r\n}\r\n\r\nexport default Body;","import './App.css';\nimport Header from './components/Header.js';\nimport Intro from './components/Intro.js';\nimport Body from './components/Body.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Intro />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}